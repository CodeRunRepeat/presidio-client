/* 
 * Presidio.
 *
 * Documentation for Presidio API Swagger.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Represents the streams configuration
    /// </summary>
    [DataContract]
    public partial class StreamConfig :  IEquatable<StreamConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StreamConfig" /> class.
        /// </summary>
        /// <param name="ehConfig">ehConfig.</param>
        /// <param name="kafkaConfig">kafkaConfig.</param>
        /// <param name="partitionCount">Number of partitions if applicable.</param>
        public StreamConfig(EHConfig ehConfig = default(EHConfig), KafkaConfig kafkaConfig = default(KafkaConfig), int? partitionCount = default(int?))
        {
            this.EhConfig = ehConfig;
            this.KafkaConfig = kafkaConfig;
            this.PartitionCount = partitionCount;
        }
        
        /// <summary>
        /// Gets or Sets EhConfig
        /// </summary>
        [DataMember(Name="ehConfig", EmitDefaultValue=false)]
        public EHConfig EhConfig { get; set; }

        /// <summary>
        /// Gets or Sets KafkaConfig
        /// </summary>
        [DataMember(Name="kafkaConfig", EmitDefaultValue=false)]
        public KafkaConfig KafkaConfig { get; set; }

        /// <summary>
        /// Number of partitions if applicable
        /// </summary>
        /// <value>Number of partitions if applicable</value>
        [DataMember(Name="partitionCount", EmitDefaultValue=false)]
        public int? PartitionCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StreamConfig {\n");
            sb.Append("  EhConfig: ").Append(EhConfig).Append("\n");
            sb.Append("  KafkaConfig: ").Append(KafkaConfig).Append("\n");
            sb.Append("  PartitionCount: ").Append(PartitionCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StreamConfig);
        }

        /// <summary>
        /// Returns true if StreamConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of StreamConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StreamConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EhConfig == input.EhConfig ||
                    (this.EhConfig != null &&
                    this.EhConfig.Equals(input.EhConfig))
                ) && 
                (
                    this.KafkaConfig == input.KafkaConfig ||
                    (this.KafkaConfig != null &&
                    this.KafkaConfig.Equals(input.KafkaConfig))
                ) && 
                (
                    this.PartitionCount == input.PartitionCount ||
                    (this.PartitionCount != null &&
                    this.PartitionCount.Equals(input.PartitionCount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EhConfig != null)
                    hashCode = hashCode * 59 + this.EhConfig.GetHashCode();
                if (this.KafkaConfig != null)
                    hashCode = hashCode * 59 + this.KafkaConfig.GetHashCode();
                if (this.PartitionCount != null)
                    hashCode = hashCode * 59 + this.PartitionCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
