/* 
 * Presidio.
 *
 * Documentation for Presidio API Swagger.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// The Kafka configuration
    /// </summary>
    [DataContract]
    public partial class KafkaConfig :  IEquatable<KafkaConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KafkaConfig" /> class.
        /// </summary>
        /// <param name="address">Kafka address.</param>
        /// <param name="saslPassword">SASL authentication password.</param>
        /// <param name="saslUsername">SASL authentication user name.</param>
        /// <param name="topic">Kafka topic.</param>
        public KafkaConfig(string address = default(string), string saslPassword = default(string), string saslUsername = default(string), string topic = default(string))
        {
            this.Address = address;
            this.SaslPassword = saslPassword;
            this.SaslUsername = saslUsername;
            this.Topic = topic;
        }
        
        /// <summary>
        /// Kafka address
        /// </summary>
        /// <value>Kafka address</value>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// SASL authentication password
        /// </summary>
        /// <value>SASL authentication password</value>
        [DataMember(Name="saslPassword", EmitDefaultValue=false)]
        public string SaslPassword { get; set; }

        /// <summary>
        /// SASL authentication user name
        /// </summary>
        /// <value>SASL authentication user name</value>
        [DataMember(Name="saslUsername", EmitDefaultValue=false)]
        public string SaslUsername { get; set; }

        /// <summary>
        /// Kafka topic
        /// </summary>
        /// <value>Kafka topic</value>
        [DataMember(Name="topic", EmitDefaultValue=false)]
        public string Topic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KafkaConfig {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  SaslPassword: ").Append(SaslPassword).Append("\n");
            sb.Append("  SaslUsername: ").Append(SaslUsername).Append("\n");
            sb.Append("  Topic: ").Append(Topic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KafkaConfig);
        }

        /// <summary>
        /// Returns true if KafkaConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of KafkaConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KafkaConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.SaslPassword == input.SaslPassword ||
                    (this.SaslPassword != null &&
                    this.SaslPassword.Equals(input.SaslPassword))
                ) && 
                (
                    this.SaslUsername == input.SaslUsername ||
                    (this.SaslUsername != null &&
                    this.SaslUsername.Equals(input.SaslUsername))
                ) && 
                (
                    this.Topic == input.Topic ||
                    (this.Topic != null &&
                    this.Topic.Equals(input.Topic))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.SaslPassword != null)
                    hashCode = hashCode * 59 + this.SaslPassword.GetHashCode();
                if (this.SaslUsername != null)
                    hashCode = hashCode * 59 + this.SaslUsername.GetHashCode();
                if (this.Topic != null)
                    hashCode = hashCode * 59 + this.Topic.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
