/* 
 * Presidio.
 *
 * Documentation for Presidio API Swagger.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AnalyzeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnalyzeApiTests
    {
        private AnalyzeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnalyzeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnalyzeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AnalyzeApi
            //Assert.IsInstanceOfType(typeof(AnalyzeApi), instance, "instance is a AnalyzeApi");
        }

        
        /// <summary>
        /// Test AnalyzeRequest
        /// </summary>
        [Test]
        public void AnalyzeRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? projectId = null;
            //AnalyzeRequest body = null;
            //var response = instance.AnalyzeRequest(projectId, body);
            //Assert.IsInstanceOf<List<AnalyzeResult>> (response, "response is List<AnalyzeResult>");
        }
        
        /// <summary>
        /// Test DeleteAnalyzeTemplateRequest
        /// </summary>
        [Test]
        public void DeleteAnalyzeTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //instance.DeleteAnalyzeTemplateRequest(projectId, templateId);
            
        }
        
        /// <summary>
        /// Test GetAllRecognizersRequest
        /// </summary>
        [Test]
        public void GetAllRecognizersRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllRecognizersRequest();
            //Assert.IsInstanceOf<List<RecognizersGetResponse>> (response, "response is List<RecognizersGetResponse>");
        }
        
        /// <summary>
        /// Test GetAnalyzeTemplateRequest
        /// </summary>
        [Test]
        public void GetAnalyzeTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //instance.GetAnalyzeTemplateRequest(projectId, templateId);
            
        }
        
        /// <summary>
        /// Test GetRecognizerRequest
        /// </summary>
        [Test]
        public void GetRecognizerRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetRecognizerRequest(id);
            //Assert.IsInstanceOf<RecognizersGetResponse> (response, "response is RecognizersGetResponse");
        }
        
        /// <summary>
        /// Test InsertRecognizerRequest
        /// </summary>
        [Test]
        public void InsertRecognizerRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //RecognizerInsertOrUpdateRequest body = null;
            //instance.InsertRecognizerRequest(id, body);
            
        }
        
        /// <summary>
        /// Test PostAnalyzeTemplateRequest
        /// </summary>
        [Test]
        public void PostAnalyzeTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //AnalyzeTemplate body = null;
            //instance.PostAnalyzeTemplateRequest(projectId, templateId, body);
            
        }
        
        /// <summary>
        /// Test PutAnalyzeTemplateRequest
        /// </summary>
        [Test]
        public void PutAnalyzeTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //AnalyzeTemplate body = null;
            //instance.PutAnalyzeTemplateRequest(projectId, templateId, body);
            
        }
        
    }

}
