/* 
 * Presidio.
 *
 * Documentation for Presidio API Swagger.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AnonymizeImageApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnonymizeImageApiTests
    {
        private AnonymizeImageApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnonymizeImageApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnonymizeImageApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AnonymizeImageApi
            //Assert.IsInstanceOfType(typeof(AnonymizeImageApi), instance, "instance is a AnonymizeImageApi");
        }

        
        /// <summary>
        /// Test AnonymizeImageRequest
        /// </summary>
        [Test]
        public void AnonymizeImageRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? projectId = null;
            //AnonymizeImageRequest body = null;
            //var response = instance.AnonymizeImageRequest(projectId, body);
            //Assert.IsInstanceOf<AnonymizeImageResponse> (response, "response is AnonymizeImageResponse");
        }
        
        /// <summary>
        /// Test DeleteAnonymizeImageTemplateRequest
        /// </summary>
        [Test]
        public void DeleteAnonymizeImageTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //instance.DeleteAnonymizeImageTemplateRequest(projectId, templateId);
            
        }
        
        /// <summary>
        /// Test GetAnonymizeImageTemplateRequest
        /// </summary>
        [Test]
        public void GetAnonymizeImageTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //instance.GetAnonymizeImageTemplateRequest(projectId, templateId);
            
        }
        
        /// <summary>
        /// Test PostAnonymizeImageTemplateRequest
        /// </summary>
        [Test]
        public void PostAnonymizeImageTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //AnonymizeImageTemplate body = null;
            //instance.PostAnonymizeImageTemplateRequest(projectId, templateId, body);
            
        }
        
        /// <summary>
        /// Test PutAnonymizeImageTemplateRequest
        /// </summary>
        [Test]
        public void PutAnonymizeImageTemplateRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string templateId = null;
            //AnonymizeImageTemplate body = null;
            //instance.PutAnonymizeImageTemplateRequest(projectId, templateId, body);
            
        }
        
    }

}
